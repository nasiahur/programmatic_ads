import os

#
#
#
from _domain.core import Paths, System
from _domain.utils import Command

#
#
#
class DomainCategorizer:

    def categorize(self, domain):
    
        try:
            name = "categories_checker"
            if System.WS_WINDOWS == System.name():
                name += ".exe"

            exe  = os.path.join(Paths.bin_dir(), name)
            arg1 = "--definitions=%s" % (os.path.join(Paths.var_dir(), "spool", "categories", "definitions.dat"))
            arg2 = "--domain=%s" % domain

            (exit_code, stdout, stderr) = Command().run([exe, arg1, arg2]) 
            
            if 0 == exit_code:
                data = stdout.strip()
                data = data.strip("]")
                data = data.strip("[")
                data = data.strip()
                if len(data) == 0:
                    return []
                else:
                    return data.split(':')
                    
        except Exception as e:
            pass
        
        return []


#
# bit masks for categories - generated by M:\defs.diladele.com\db_definitions\updates\code.py
#
class BuildInCategories:

    # numeric categories
    CATEGORY_NONE                           = 0
    CATEGORY_ADULT_THEMES_SEXUALITY         = 1 << 1
    CATEGORY_ADVERTISING                    = 1 << 2
    CATEGORY_ALCOHOL_TOBACCO                = 1 << 3
    CATEGORY_ANIME_MANGA_WEBCOMIC           = 1 << 4
    CATEGORY_ARTS_SOCIETY_CULTURE           = 1 << 5
    CATEGORY_AUTOMOTIVE                     = 1 << 6
    CATEGORY_BANKING_INSURANCE_FINANCE      = 1 << 7
    CATEGORY_BLOGS_PERSONAL                 = 1 << 8
    CATEGORY_BUSINESS_SERVICES_INDUSTRY     = 1 << 9
    CATEGORY_CLASSIFIEDS_AUCTIONS           = 1 << 10
    CATEGORY_CONTENT_DELIVERY_NETWORKS      = 1 << 11
    CATEGORY_CRACKS_HACKING_ILLEGAL         = 1 << 12
    CATEGORY_DATING                         = 1 << 13
    CATEGORY_DRUGS                          = 1 << 14
    CATEGORY_ECOMMERCE_SHOPPING             = 1 << 15
    CATEGORY_EDUCATION_SCIENCE_RESEARCH     = 1 << 16
    CATEGORY_ENTERTAINMENT_HUMOR_HOBBY      = 1 << 17
    CATEGORY_EXPIRED_PARKED                 = 1 << 18
    CATEGORY_FASHION_BEAUTY_COSMETICS       = 1 << 19
    CATEGORY_FILE_STORAGE                   = 1 << 20
    CATEGORY_FOOD_DINING_RESTAURANTS        = 1 << 21
    CATEGORY_FORUMS_MESSAGE_BOARDS          = 1 << 22
    CATEGORY_GAMBLING                       = 1 << 23
    CATEGORY_GAMES                          = 1 << 24
    CATEGORY_GENERIC_NON_CATEGORIZED        = 1 << 25
    CATEGORY_GOVERNMENT                     = 1 << 26
    CATEGORY_HATE_DISCRIMINATION_VIOLENCE   = 1 << 27
    CATEGORY_HEALTH_MEDICINE_FITNESS        = 1 << 28
    CATEGORY_JOBS_EMPLOYMENT_CAREER         = 1 << 29
    CATEGORY_MESSAGING_CHAT                 = 1 << 30
    CATEGORY_MOVIES                         = 1 << 31
    CATEGORY_MUSIC_RADIO                    = 1 << 32
    CATEGORY_NETWORK_INFRASTRUCTURE         = 1 << 33
    CATEGORY_NEWS_MEDIA                     = 1 << 34
    CATEGORY_NUDITY_PORNOGRAPHY             = 1 << 35
    CATEGORY_P2P_FILE_SHARING               = 1 << 36
    CATEGORY_PHOTO_SHARING                  = 1 << 37
    CATEGORY_POLITICS                       = 1 << 38
    CATEGORY_PORTALS                        = 1 << 39
    CATEGORY_PROXY_ANONYMIZER               = 1 << 40
    CATEGORY_REAL_ESTATE_HOME_INTERIOR      = 1 << 41
    CATEGORY_RELIGIOUS                      = 1 << 42
    CATEGORY_SEARCH_ENGINES                 = 1 << 43
    CATEGORY_SOCIAL_NETWORKING              = 1 << 44
    CATEGORY_SOFTWARE_TECHNOLOGY_HARDWARE   = 1 << 45
    CATEGORY_SPORTS                         = 1 << 46
    CATEGORY_TELEVISION                     = 1 << 47
    CATEGORY_TRAVEL                         = 1 << 48
    CATEGORY_USER_TRACKING                  = 1 << 49
    CATEGORY_VIDEO_SHARING                  = 1 << 50
    CATEGORY_WEAPONS                        = 1 << 51
    CATEGORY_WEBMAIL                        = 1 << 52
    CATEGORY_MAXIMUM                        = 1 << 53

    # list of available categories as array
    CATEGORY_NAMES = [
        "adult_themes_sexuality",
        "advertising",
        "alcohol_tobacco",
        "anime_manga_webcomic",
        "arts_society_culture",
        "automotive",
        "banking_insurance_finance",
        "blogs_personal",
        "business_services_industry",
        "classifieds_auctions",
        "content_delivery_networks",
        "cracks_hacking_illegal",
        "dating",
        "drugs",
        "ecommerce_shopping",
        "education_science_research",
        "entertainment_humor_hobby",
        "expired_parked",
        "fashion_beauty_cosmetics",
        "file_storage",
        "food_dining_restaurants",
        "forums_message_boards",
        "gambling",
        "games",
        "generic_non_categorized",
        "government",
        "hate_discrimination_violence",
        "health_medicine_fitness",
        "jobs_employment_career",
        "messaging_chat",
        "movies",
        "music_radio",
        "network_infrastructure",
        "news_media",
        "nudity_pornography",
        "p2p_file_sharing",
        "photo_sharing",
        "politics",
        "portals",
        "proxy_anonymizer",
        "real_estate_home_interior",
        "religious",
        "search_engines",
        "social_networking",
        "software_technology_hardware",
        "sports",
        "television",
        "travel",
        "user_tracking",
        "video_sharing",
        "weapons",
        "webmail",
    ]

    def map_name(name):

        name_lower = name.lower()
        if name_lower == "adult_themes_sexuality":
            return CATEGORY_ADULT_THEMES_SEXUALITY;

        if name_lower == "advertising":
            return CATEGORY_ADVERTISING;

        if name_lower == "alcohol_tobacco":
            return CATEGORY_ALCOHOL_TOBACCO;

        if name_lower == "anime_manga_webcomic":
            return CATEGORY_ANIME_MANGA_WEBCOMIC;

        if name_lower == "arts_society_culture":
            return CATEGORY_ARTS_SOCIETY_CULTURE;

        if name_lower == "automotive":
            return CATEGORY_AUTOMOTIVE;

        if name_lower == "banking_insurance_finance":
            return CATEGORY_BANKING_INSURANCE_FINANCE;

        if name_lower == "blogs_personal":
            return CATEGORY_BLOGS_PERSONAL;

        if name_lower == "business_services_industry":
            return CATEGORY_BUSINESS_SERVICES_INDUSTRY;

        if name_lower == "classifieds_auctions":
            return CATEGORY_CLASSIFIEDS_AUCTIONS;

        if name_lower == "content_delivery_networks":
            return CATEGORY_CONTENT_DELIVERY_NETWORKS;

        if name_lower == "cracks_hacking_illegal":
            return CATEGORY_CRACKS_HACKING_ILLEGAL;

        if name_lower == "dating":
            return CATEGORY_DATING;

        if name_lower == "drugs":
            return CATEGORY_DRUGS;

        if name_lower == "ecommerce_shopping":
            return CATEGORY_ECOMMERCE_SHOPPING;

        if name_lower == "education_science_research":
            return CATEGORY_EDUCATION_SCIENCE_RESEARCH;

        if name_lower == "entertainment_humor_hobby":
            return CATEGORY_ENTERTAINMENT_HUMOR_HOBBY;

        if name_lower == "expired_parked":
            return CATEGORY_EXPIRED_PARKED;

        if name_lower == "fashion_beauty_cosmetics":
            return CATEGORY_FASHION_BEAUTY_COSMETICS;

        if name_lower == "file_storage":
            return CATEGORY_FILE_STORAGE;

        if name_lower == "food_dining_restaurants":
            return CATEGORY_FOOD_DINING_RESTAURANTS;

        if name_lower == "forums_message_boards":
            return CATEGORY_FORUMS_MESSAGE_BOARDS;

        if name_lower == "gambling":
            return CATEGORY_GAMBLING;

        if name_lower == "games":
            return CATEGORY_GAMES;

        if name_lower == "generic_non_categorized":
            return CATEGORY_GENERIC_NON_CATEGORIZED;

        if name_lower == "government":
            return CATEGORY_GOVERNMENT;

        if name_lower == "hate_discrimination_violence":
            return CATEGORY_HATE_DISCRIMINATION_VIOLENCE;

        if name_lower == "health_medicine_fitness":
            return CATEGORY_HEALTH_MEDICINE_FITNESS;

        if name_lower == "jobs_employment_career":
            return CATEGORY_JOBS_EMPLOYMENT_CAREER;

        if name_lower == "messaging_chat":
            return CATEGORY_MESSAGING_CHAT;

        if name_lower == "movies":
            return CATEGORY_MOVIES;

        if name_lower == "music_radio":
            return CATEGORY_MUSIC_RADIO;

        if name_lower == "network_infrastructure":
            return CATEGORY_NETWORK_INFRASTRUCTURE;

        if name_lower == "news_media":
            return CATEGORY_NEWS_MEDIA;

        if name_lower == "nudity_pornography":
            return CATEGORY_NUDITY_PORNOGRAPHY;

        if name_lower == "p2p_file_sharing":
            return CATEGORY_P2P_FILE_SHARING;

        if name_lower == "photo_sharing":
            return CATEGORY_PHOTO_SHARING;

        if name_lower == "politics":
            return CATEGORY_POLITICS;

        if name_lower == "portals":
            return CATEGORY_PORTALS;

        if name_lower == "proxy_anonymizer":
            return CATEGORY_PROXY_ANONYMIZER;

        if name_lower == "real_estate_home_interior":
            return CATEGORY_REAL_ESTATE_HOME_INTERIOR;

        if name_lower == "religious":
            return CATEGORY_RELIGIOUS;

        if name_lower == "search_engines":
            return CATEGORY_SEARCH_ENGINES;

        if name_lower == "social_networking":
            return CATEGORY_SOCIAL_NETWORKING;

        if name_lower == "software_technology_hardware":
            return CATEGORY_SOFTWARE_TECHNOLOGY_HARDWARE;

        if name_lower == "sports":
            return CATEGORY_SPORTS;

        if name_lower == "television":
            return CATEGORY_TELEVISION;

        if name_lower == "travel":
            return CATEGORY_TRAVEL;

        if name_lower == "user_tracking":
            return CATEGORY_USER_TRACKING;

        if name_lower == "video_sharing":
            return CATEGORY_VIDEO_SHARING;

        if name_lower == "weapons":
            return CATEGORY_WEAPONS;

        if name_lower == "webmail":
            return CATEGORY_WEBMAIL;

        return CATEGORY_NONE

    def unmap_name(value):

        result = []
        if v & CATEGORY_ADULT_THEMES_SEXUALITY:
            result.append("adult_themes_sexuality")

        if v & CATEGORY_ADVERTISING:
            result.append("advertising")

        if v & CATEGORY_ALCOHOL_TOBACCO:
            result.append("alcohol_tobacco")

        if v & CATEGORY_ANIME_MANGA_WEBCOMIC:
            result.append("anime_manga_webcomic")

        if v & CATEGORY_ARTS_SOCIETY_CULTURE:
            result.append("arts_society_culture")

        if v & CATEGORY_AUTOMOTIVE:
            result.append("automotive")

        if v & CATEGORY_BANKING_INSURANCE_FINANCE:
            result.append("banking_insurance_finance")

        if v & CATEGORY_BLOGS_PERSONAL:
            result.append("blogs_personal")

        if v & CATEGORY_BUSINESS_SERVICES_INDUSTRY:
            result.append("business_services_industry")

        if v & CATEGORY_CLASSIFIEDS_AUCTIONS:
            result.append("classifieds_auctions")

        if v & CATEGORY_CONTENT_DELIVERY_NETWORKS:
            result.append("content_delivery_networks")

        if v & CATEGORY_CRACKS_HACKING_ILLEGAL:
            result.append("cracks_hacking_illegal")

        if v & CATEGORY_DATING:
            result.append("dating")

        if v & CATEGORY_DRUGS:
            result.append("drugs")

        if v & CATEGORY_ECOMMERCE_SHOPPING:
            result.append("ecommerce_shopping")

        if v & CATEGORY_EDUCATION_SCIENCE_RESEARCH:
            result.append("education_science_research")

        if v & CATEGORY_ENTERTAINMENT_HUMOR_HOBBY:
            result.append("entertainment_humor_hobby")

        if v & CATEGORY_EXPIRED_PARKED:
            result.append("expired_parked")

        if v & CATEGORY_FASHION_BEAUTY_COSMETICS:
            result.append("fashion_beauty_cosmetics")

        if v & CATEGORY_FILE_STORAGE:
            result.append("file_storage")

        if v & CATEGORY_FOOD_DINING_RESTAURANTS:
            result.append("food_dining_restaurants")

        if v & CATEGORY_FORUMS_MESSAGE_BOARDS:
            result.append("forums_message_boards")

        if v & CATEGORY_GAMBLING:
            result.append("gambling")

        if v & CATEGORY_GAMES:
            result.append("games")

        if v & CATEGORY_GENERIC_NON_CATEGORIZED:
            result.append("generic_non_categorized")

        if v & CATEGORY_GOVERNMENT:
            result.append("government")

        if v & CATEGORY_HATE_DISCRIMINATION_VIOLENCE:
            result.append("hate_discrimination_violence")

        if v & CATEGORY_HEALTH_MEDICINE_FITNESS:
            result.append("health_medicine_fitness")

        if v & CATEGORY_JOBS_EMPLOYMENT_CAREER:
            result.append("jobs_employment_career")

        if v & CATEGORY_MESSAGING_CHAT:
            result.append("messaging_chat")

        if v & CATEGORY_MOVIES:
            result.append("movies")

        if v & CATEGORY_MUSIC_RADIO:
            result.append("music_radio")

        if v & CATEGORY_NETWORK_INFRASTRUCTURE:
            result.append("network_infrastructure")

        if v & CATEGORY_NEWS_MEDIA:
            result.append("news_media")

        if v & CATEGORY_NUDITY_PORNOGRAPHY:
            result.append("nudity_pornography")

        if v & CATEGORY_P2P_FILE_SHARING:
            result.append("p2p_file_sharing")

        if v & CATEGORY_PHOTO_SHARING:
            result.append("photo_sharing")

        if v & CATEGORY_POLITICS:
            result.append("politics")

        if v & CATEGORY_PORTALS:
            result.append("portals")

        if v & CATEGORY_PROXY_ANONYMIZER:
            result.append("proxy_anonymizer")

        if v & CATEGORY_REAL_ESTATE_HOME_INTERIOR:
            result.append("real_estate_home_interior")

        if v & CATEGORY_RELIGIOUS:
            result.append("religious")

        if v & CATEGORY_SEARCH_ENGINES:
            result.append("search_engines")

        if v & CATEGORY_SOCIAL_NETWORKING:
            result.append("social_networking")

        if v & CATEGORY_SOFTWARE_TECHNOLOGY_HARDWARE:
            result.append("software_technology_hardware")

        if v & CATEGORY_SPORTS:
            result.append("sports")

        if v & CATEGORY_TELEVISION:
            result.append("television")

        if v & CATEGORY_TRAVEL:
            result.append("travel")

        if v & CATEGORY_USER_TRACKING:
            result.append("user_tracking")

        if v & CATEGORY_VIDEO_SHARING:
            result.append("video_sharing")

        if v & CATEGORY_WEAPONS:
            result.append("weapons")

        if v & CATEGORY_WEBMAIL:
            result.append("webmail")

        return result
