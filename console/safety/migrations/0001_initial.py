# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2018-04-12 11:03
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Annoyances',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('apply_replace_heuristics', models.BooleanField(default=True)),
                ('replace_with_image', models.BooleanField(default=True)),
                ('hide_tags', models.BooleanField(default=True)),
                ('mangle_id', models.BooleanField(default=False)),
                ('mangle_class', models.BooleanField(default=False)),
                ('scan_external_links', models.BooleanField(default=False)),
                ('enable_bulgarian', models.BooleanField(default=False)),
                ('enable_chinese', models.BooleanField(default=False)),
                ('enable_czech', models.BooleanField(default=False)),
                ('enable_danish', models.BooleanField(default=False)),
                ('enable_dutch', models.BooleanField(default=False)),
                ('enable_english', models.BooleanField(default=True)),
                ('enable_estonian', models.BooleanField(default=False)),
                ('enable_french', models.BooleanField(default=False)),
                ('enable_german', models.BooleanField(default=False)),
                ('enable_greek', models.BooleanField(default=False)),
                ('enable_hungarian', models.BooleanField(default=False)),
                ('enable_indian', models.BooleanField(default=False)),
                ('enable_israeli', models.BooleanField(default=False)),
                ('enable_italian', models.BooleanField(default=False)),
                ('enable_japanese', models.BooleanField(default=False)),
                ('enable_korean', models.BooleanField(default=False)),
                ('enable_latvian', models.BooleanField(default=False)),
                ('enable_lithuanian', models.BooleanField(default=False)),
                ('enable_polish', models.BooleanField(default=False)),
                ('enable_portuguese', models.BooleanField(default=False)),
                ('enable_romanian', models.BooleanField(default=False)),
                ('enable_russian', models.BooleanField(default=False)),
                ('enable_slovak', models.BooleanField(default=False)),
                ('enable_spanish', models.BooleanField(default=False)),
                ('enable_swedish', models.BooleanField(default=False)),
                ('enable_turkish', models.BooleanField(default=False)),
                ('enable_vietnamese', models.BooleanField(default=False)),
                ('enable_adware', models.BooleanField(default=False)),
                ('enable_annoyance', models.BooleanField(default=False)),
                ('enable_antiadb', models.BooleanField(default=False)),
                ('enable_cookies', models.BooleanField(default=False)),
                ('enable_privacy', models.BooleanField(default=False)),
                ('enable_social', models.BooleanField(default=False)),
                ('enable_tracking', models.BooleanField(default=False)),
                ('enable_yt_comments', models.BooleanField(default=False)),
                ('enable_yt_suggestions', models.BooleanField(default=False)),
                ('enable_yt_other', models.BooleanField(default=False)),
                ('enable_custom1', models.BooleanField(default=True)),
                ('enable_custom2', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Apps',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('google_apps_allowed_domains', models.CharField(blank=True, max_length=254, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ByPassToken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(db_index=True, max_length=254, unique=True)),
                ('name', models.CharField(db_index=True, max_length=254)),
                ('comment', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Categories',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('use_ml_domains', models.BooleanField(default=False)),
                ('trust_adult_themes_sexuality', models.BooleanField(default=False)),
                ('trust_advertising', models.BooleanField(default=True)),
                ('trust_alcohol_tobacco', models.BooleanField(default=False)),
                ('trust_anime_manga_webcomic', models.BooleanField(default=False)),
                ('trust_arts_society_culture', models.BooleanField(default=False)),
                ('trust_automotive', models.BooleanField(default=True)),
                ('trust_banking_insurance_finance', models.BooleanField(default=True)),
                ('trust_blogs_personal', models.BooleanField(default=False)),
                ('trust_business_services_industry', models.BooleanField(default=True)),
                ('trust_classifieds_auctions', models.BooleanField(default=False)),
                ('trust_content_delivery_networks', models.BooleanField(default=False)),
                ('trust_cracks_hacking_illegal', models.BooleanField(default=False)),
                ('trust_dating', models.BooleanField(default=False)),
                ('trust_drugs', models.BooleanField(default=False)),
                ('trust_ecommerce_shopping', models.BooleanField(default=True)),
                ('trust_education_science_research', models.BooleanField(default=True)),
                ('trust_entertainment_humor_hobby', models.BooleanField(default=False)),
                ('trust_expired_parked', models.BooleanField(default=False)),
                ('trust_fashion_beauty_cosmetics', models.BooleanField(default=True)),
                ('trust_file_storage', models.BooleanField(default=False)),
                ('trust_food_dining_restaurants', models.BooleanField(default=True)),
                ('trust_forums_message_boards', models.BooleanField(default=False)),
                ('trust_gambling', models.BooleanField(default=False)),
                ('trust_games', models.BooleanField(default=False)),
                ('trust_generic_non_categorized', models.BooleanField(default=False)),
                ('trust_government', models.BooleanField(default=True)),
                ('trust_hate_discrimination_violence', models.BooleanField(default=False)),
                ('trust_health_medicine_fitness', models.BooleanField(default=True)),
                ('trust_jobs_employment_career', models.BooleanField(default=True)),
                ('trust_messaging_chat', models.BooleanField(default=False)),
                ('trust_movies', models.BooleanField(default=True)),
                ('trust_music_radio', models.BooleanField(default=True)),
                ('trust_network_infrastructure', models.BooleanField(default=True)),
                ('trust_news_media', models.BooleanField(default=True)),
                ('trust_nudity_pornography', models.BooleanField(default=False)),
                ('trust_p2p_file_sharing', models.BooleanField(default=False)),
                ('trust_photo_sharing', models.BooleanField(default=False)),
                ('trust_politics', models.BooleanField(default=True)),
                ('trust_portals', models.BooleanField(default=False)),
                ('trust_proxy_anonymizer', models.BooleanField(default=False)),
                ('trust_real_estate_home_interior', models.BooleanField(default=True)),
                ('trust_religious', models.BooleanField(default=True)),
                ('trust_search_engines', models.BooleanField(default=False)),
                ('trust_social_networking', models.BooleanField(default=True)),
                ('trust_software_technology_hardware', models.BooleanField(default=True)),
                ('trust_sports', models.BooleanField(default=True)),
                ('trust_television', models.BooleanField(default=True)),
                ('trust_travel', models.BooleanField(default=True)),
                ('trust_user_tracking', models.BooleanField(default=False)),
                ('trust_video_sharing', models.BooleanField(default=False)),
                ('trust_weapons', models.BooleanField(default=False)),
                ('trust_webmail', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='ClusteringClient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enabled', models.BooleanField(default=False)),
                ('sync_interval', models.IntegerField(default=5)),
                ('port', models.IntegerField(default=18999)),
                ('server_address', models.CharField(max_length=254)),
                ('cert_file', models.CharField(max_length=254)),
                ('private_key_file', models.CharField(max_length=254)),
                ('ca_file', models.CharField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='ClusteringServer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enabled', models.BooleanField(default=False)),
                ('server_address', models.CharField(max_length=254)),
                ('port', models.IntegerField(default=18999)),
                ('cert_file', models.CharField(max_length=254)),
                ('private_key_file', models.CharField(max_length=254)),
                ('ca_file', models.CharField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='CustomCategory',
            fields=[
                ('name', models.CharField(max_length=254, primary_key=True, serialize=False, unique=True)),
                ('title', models.CharField(max_length=254)),
                ('trust', models.BooleanField(default=False)),
                ('sslbump', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ExclusionContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=254)),
                ('scan_adult', models.BooleanField(default=False)),
                ('scan_categories', models.BooleanField(default=False)),
                ('scan_file', models.BooleanField(default=False)),
                ('scan_adblock', models.BooleanField(default=False)),
                ('scan_privacy', models.BooleanField(default=False)),
                ('scan_http', models.BooleanField(default=False)),
                ('comment', models.TextField()),
            ],
            options={
                'ordering': ['value'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExclusionDomain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=254)),
                ('scan_adult', models.BooleanField(default=False)),
                ('scan_categories', models.BooleanField(default=False)),
                ('scan_file', models.BooleanField(default=False)),
                ('scan_adblock', models.BooleanField(default=False)),
                ('scan_privacy', models.BooleanField(default=False)),
                ('scan_http', models.BooleanField(default=False)),
                ('comment', models.TextField()),
            ],
            options={
                'ordering': ['value'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExclusionIp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=254)),
                ('scan_adult', models.BooleanField(default=False)),
                ('scan_categories', models.BooleanField(default=False)),
                ('scan_file', models.BooleanField(default=False)),
                ('scan_adblock', models.BooleanField(default=False)),
                ('scan_privacy', models.BooleanField(default=False)),
                ('scan_http', models.BooleanField(default=False)),
                ('comment', models.TextField()),
            ],
            options={
                'ordering': ['value'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExclusionRange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=254)),
                ('scan_adult', models.BooleanField(default=False)),
                ('scan_categories', models.BooleanField(default=False)),
                ('scan_file', models.BooleanField(default=False)),
                ('scan_adblock', models.BooleanField(default=False)),
                ('scan_privacy', models.BooleanField(default=False)),
                ('scan_http', models.BooleanField(default=False)),
                ('comment', models.TextField()),
            ],
            options={
                'ordering': ['value'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExclusionSubnet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=254)),
                ('scan_adult', models.BooleanField(default=False)),
                ('scan_categories', models.BooleanField(default=False)),
                ('scan_file', models.BooleanField(default=False)),
                ('scan_adblock', models.BooleanField(default=False)),
                ('scan_privacy', models.BooleanField(default=False)),
                ('scan_http', models.BooleanField(default=False)),
                ('comment', models.TextField()),
            ],
            options={
                'ordering': ['value'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExclusionUrl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=254)),
                ('scan_adult', models.BooleanField(default=False)),
                ('scan_categories', models.BooleanField(default=False)),
                ('scan_file', models.BooleanField(default=False)),
                ('scan_adblock', models.BooleanField(default=False)),
                ('scan_privacy', models.BooleanField(default=False)),
                ('scan_http', models.BooleanField(default=False)),
                ('comment', models.TextField()),
            ],
            options={
                'ordering': ['value'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FileType',
            fields=[
                ('name', models.CharField(max_length=254, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='MemberIp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=254)),
                ('comment', models.TextField()),
            ],
            options={
                'ordering': ['value'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MemberLdap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=254)),
                ('dn', models.CharField(max_length=4096)),
                ('recursive', models.BooleanField(default=False)),
                ('comment', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='MemberName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=254)),
                ('comment', models.TextField()),
            ],
            options={
                'ordering': ['value'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MemberRange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=254)),
                ('comment', models.TextField()),
            ],
            options={
                'ordering': ['value'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MemberSubnet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=254)),
                ('comment', models.TextField()),
            ],
            options={
                'ordering': ['value'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Network',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enable_icap', models.BooleanField(default=True)),
                ('bypass_to_localnet', models.BooleanField(default=True)),
                ('wsicap_address', models.CharField(default=b'127.0.0.1', max_length=200)),
                ('wsicap_port', models.IntegerField(default=1344)),
                ('wsicap_debug', models.BooleanField(default=False)),
                ('wsicap_threads', models.IntegerField(default=9)),
                ('wsicap_logging', models.IntegerField(choices=[(0, b'debug'), (1, b'info'), (2, b'warning'), (3, b'error')], default=1)),
            ],
        ),
        migrations.CreateModel(
            name='PhraseEngine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count_type', models.IntegerField(choices=[(0, b'Count all phrase occurance in text'), (1, b'Count phrase occurance only once in text')], default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Policy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=254, unique=True)),
                ('priority', models.IntegerField(default=1)),
                ('bypass_allowed', models.BooleanField(default=False)),
                ('bypass_strip_www', models.BooleanField(default=True)),
                ('bypass_children', models.BooleanField(default=True)),
                ('bypass_category', models.BooleanField(default=False)),
                ('bypass_all', models.BooleanField(default=False)),
                ('bypass_referers', models.BooleanField(default=False)),
                ('bypass_duration', models.IntegerField(default=60)),
                ('bypass_token_required', models.BooleanField(default=False)),
                ('bypass_adult', models.BooleanField(default=True)),
                ('bypass_categories', models.BooleanField(default=True)),
                ('bypass_file', models.BooleanField(default=True)),
                ('bypass_adblock', models.BooleanField(default=True)),
                ('bypass_privacy', models.BooleanField(default=True)),
                ('bypass_http', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='RecategorizedDomain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=256, unique=True)),
                ('assign_adult_themes_sexuality', models.BooleanField(default=False)),
                ('assign_advertising', models.BooleanField(default=False)),
                ('assign_alcohol_tobacco', models.BooleanField(default=False)),
                ('assign_anime_manga_webcomic', models.BooleanField(default=False)),
                ('assign_arts_society_culture', models.BooleanField(default=False)),
                ('assign_automotive', models.BooleanField(default=False)),
                ('assign_banking_insurance_finance', models.BooleanField(default=False)),
                ('assign_blogs_personal', models.BooleanField(default=False)),
                ('assign_business_services_industry', models.BooleanField(default=False)),
                ('assign_classifieds_auctions', models.BooleanField(default=False)),
                ('assign_content_delivery_networks', models.BooleanField(default=False)),
                ('assign_cracks_hacking_illegal', models.BooleanField(default=False)),
                ('assign_dating', models.BooleanField(default=False)),
                ('assign_drugs', models.BooleanField(default=False)),
                ('assign_ecommerce_shopping', models.BooleanField(default=False)),
                ('assign_education_science_research', models.BooleanField(default=False)),
                ('assign_entertainment_humor_hobby', models.BooleanField(default=False)),
                ('assign_expired_parked', models.BooleanField(default=False)),
                ('assign_fashion_beauty_cosmetics', models.BooleanField(default=False)),
                ('assign_file_storage', models.BooleanField(default=False)),
                ('assign_food_dining_restaurants', models.BooleanField(default=False)),
                ('assign_forums_message_boards', models.BooleanField(default=False)),
                ('assign_gambling', models.BooleanField(default=False)),
                ('assign_games', models.BooleanField(default=False)),
                ('assign_generic_non_categorized', models.BooleanField(default=False)),
                ('assign_government', models.BooleanField(default=False)),
                ('assign_hate_discrimination_violence', models.BooleanField(default=False)),
                ('assign_health_medicine_fitness', models.BooleanField(default=False)),
                ('assign_jobs_employment_career', models.BooleanField(default=False)),
                ('assign_messaging_chat', models.BooleanField(default=False)),
                ('assign_movies', models.BooleanField(default=False)),
                ('assign_music_radio', models.BooleanField(default=False)),
                ('assign_network_infrastructure', models.BooleanField(default=False)),
                ('assign_news_media', models.BooleanField(default=False)),
                ('assign_nudity_pornography', models.BooleanField(default=False)),
                ('assign_p2p_file_sharing', models.BooleanField(default=False)),
                ('assign_photo_sharing', models.BooleanField(default=False)),
                ('assign_politics', models.BooleanField(default=False)),
                ('assign_portals', models.BooleanField(default=False)),
                ('assign_proxy_anonymizer', models.BooleanField(default=False)),
                ('assign_real_estate_home_interior', models.BooleanField(default=False)),
                ('assign_religious', models.BooleanField(default=False)),
                ('assign_search_engines', models.BooleanField(default=False)),
                ('assign_social_networking', models.BooleanField(default=False)),
                ('assign_software_technology_hardware', models.BooleanField(default=False)),
                ('assign_sports', models.BooleanField(default=False)),
                ('assign_television', models.BooleanField(default=False)),
                ('assign_travel', models.BooleanField(default=False)),
                ('assign_user_tracking', models.BooleanField(default=False)),
                ('assign_video_sharing', models.BooleanField(default=False)),
                ('assign_weapons', models.BooleanField(default=False)),
                ('assign_webmail', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='RuleCategoryCustom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=254)),
                ('enable', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='RuleCharset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=254)),
                ('comment', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RuleContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=254)),
                ('comment', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RuleDomain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=254)),
                ('comment', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RuleFileContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=254)),
                ('comment', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RuleFileName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=254)),
                ('comment', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RuleUrl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=254)),
                ('comment', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RuleUserAgent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=254)),
                ('comment', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Safety',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('on_mon', models.BooleanField(default=True)),
                ('on_tue', models.BooleanField(default=True)),
                ('on_wed', models.BooleanField(default=True)),
                ('on_thu', models.BooleanField(default=True)),
                ('on_fri', models.BooleanField(default=True)),
                ('on_sat', models.BooleanField(default=True)),
                ('on_sun', models.BooleanField(default=True)),
                ('from_hours', models.IntegerField(default=0)),
                ('from_mins', models.IntegerField(default=0)),
                ('to_hours', models.IntegerField(default=23)),
                ('to_mins', models.IntegerField(default=59)),
            ],
        ),
        migrations.CreateModel(
            name='Advanced',
            fields=[
                ('policy', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='safety.Policy')),
                ('comment', models.TextField()),
                ('enable', models.BooleanField(default=True)),
                ('sslbump', models.BooleanField(default=True)),
                ('exclude_by_referer', models.BooleanField(default=False)),
                ('ignore_case', models.BooleanField(default=True)),
                ('hide_history', models.BooleanField(default=False)),
                ('hide_result_info', models.BooleanField(default=True)),
                ('tunnel_block', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='RuleAdult',
            fields=[
                ('policy', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='safety.Policy')),
                ('trust_allowed_categories', models.BooleanField(default=True)),
                ('enable_heuristics', models.BooleanField(default=False)),
                ('heuristics_maximum_weight', models.IntegerField(default=40)),
                ('enable_image_filtering', models.BooleanField(default=False)),
                ('enable_phrases', models.BooleanField(default=True)),
                ('phrases_maximum_weight', models.IntegerField(default=80)),
                ('phrases_maximum_size', models.IntegerField(default=2097152)),
                ('phrases_scan_links', models.BooleanField(default=True)),
                ('phrases_scan_javascript', models.BooleanField(default=False)),
                ('phrases_scan_css', models.BooleanField(default=False)),
                ('phrases_parse_links', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='RuleAnnoyances',
            fields=[
                ('policy', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='safety.Policy')),
                ('block_ads', models.BooleanField(default=True)),
                ('protect_privacy', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='RuleApps',
            fields=[
                ('policy', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='safety.Policy')),
                ('youtube_restrictions', models.IntegerField(choices=[(0, b'no restrictions'), (1, b'moderate restrictions'), (2, b'strict restrictions')], default=1)),
                ('hide_yt_comments', models.BooleanField(default=False)),
                ('hide_yt_suggestions', models.BooleanField(default=False)),
                ('hide_yt_other', models.BooleanField(default=False)),
                ('enable_google_apps', models.BooleanField(default=False)),
                ('enable_safe_search', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='RuleCategory',
            fields=[
                ('policy', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='safety.Policy')),
                ('block_noncategorized_domains', models.BooleanField(default=False)),
                ('block_adult_themes_sexuality', models.BooleanField(default=False)),
                ('block_advertising', models.BooleanField(default=False)),
                ('block_alcohol_tobacco', models.BooleanField(default=False)),
                ('block_anime_manga_webcomic', models.BooleanField(default=False)),
                ('block_arts_society_culture', models.BooleanField(default=False)),
                ('block_automotive', models.BooleanField(default=False)),
                ('block_banking_insurance_finance', models.BooleanField(default=False)),
                ('block_blogs_personal', models.BooleanField(default=False)),
                ('block_business_services_industry', models.BooleanField(default=False)),
                ('block_classifieds_auctions', models.BooleanField(default=False)),
                ('block_content_delivery_networks', models.BooleanField(default=False)),
                ('block_cracks_hacking_illegal', models.BooleanField(default=True)),
                ('block_dating', models.BooleanField(default=False)),
                ('block_drugs', models.BooleanField(default=False)),
                ('block_ecommerce_shopping', models.BooleanField(default=False)),
                ('block_education_science_research', models.BooleanField(default=False)),
                ('block_entertainment_humor_hobby', models.BooleanField(default=False)),
                ('block_expired_parked', models.BooleanField(default=False)),
                ('block_fashion_beauty_cosmetics', models.BooleanField(default=False)),
                ('block_file_storage', models.BooleanField(default=False)),
                ('block_food_dining_restaurants', models.BooleanField(default=False)),
                ('block_forums_message_boards', models.BooleanField(default=False)),
                ('block_gambling', models.BooleanField(default=False)),
                ('block_games', models.BooleanField(default=False)),
                ('block_generic_non_categorized', models.BooleanField(default=False)),
                ('block_government', models.BooleanField(default=False)),
                ('block_hate_discrimination_violence', models.BooleanField(default=False)),
                ('block_health_medicine_fitness', models.BooleanField(default=False)),
                ('block_jobs_employment_career', models.BooleanField(default=False)),
                ('block_messaging_chat', models.BooleanField(default=False)),
                ('block_movies', models.BooleanField(default=False)),
                ('block_music_radio', models.BooleanField(default=False)),
                ('block_network_infrastructure', models.BooleanField(default=False)),
                ('block_news_media', models.BooleanField(default=False)),
                ('block_nudity_pornography', models.BooleanField(default=True)),
                ('block_p2p_file_sharing', models.BooleanField(default=False)),
                ('block_photo_sharing', models.BooleanField(default=False)),
                ('block_politics', models.BooleanField(default=False)),
                ('block_portals', models.BooleanField(default=False)),
                ('block_proxy_anonymizer', models.BooleanField(default=True)),
                ('block_real_estate_home_interior', models.BooleanField(default=False)),
                ('block_religious', models.BooleanField(default=False)),
                ('block_search_engines', models.BooleanField(default=False)),
                ('block_social_networking', models.BooleanField(default=False)),
                ('block_software_technology_hardware', models.BooleanField(default=False)),
                ('block_sports', models.BooleanField(default=False)),
                ('block_television', models.BooleanField(default=False)),
                ('block_travel', models.BooleanField(default=False)),
                ('block_user_tracking', models.BooleanField(default=False)),
                ('block_video_sharing', models.BooleanField(default=False)),
                ('block_weapons', models.BooleanField(default=False)),
                ('block_webmail', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='RuleDynamicCategory',
            fields=[
                ('policy', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='safety.Policy')),
                ('enabled', models.BooleanField(default=False)),
                ('analyze_request', models.BooleanField(default=True)),
                ('analyze_response', models.BooleanField(default=True)),
                ('classify_type', models.IntegerField(choices=[(0, b'only unknown sites'), (1, b'unknown and untrusted sites'), (2, b'all sites')], default=1)),
                ('classify_adult_themes_sexuality', models.BooleanField(default=True)),
                ('classify_advertising', models.BooleanField(default=False)),
                ('classify_alcohol_tobacco', models.BooleanField(default=False)),
                ('classify_anime_manga_webcomic', models.BooleanField(default=False)),
                ('classify_arts_society_culture', models.BooleanField(default=False)),
                ('classify_automotive', models.BooleanField(default=False)),
                ('classify_banking_insurance_finance', models.BooleanField(default=False)),
                ('classify_blogs_personal', models.BooleanField(default=False)),
                ('classify_business_services_industry', models.BooleanField(default=False)),
                ('classify_classifieds_auctions', models.BooleanField(default=False)),
                ('classify_content_delivery_networks', models.BooleanField(default=False)),
                ('classify_cracks_hacking_illegal', models.BooleanField(default=False)),
                ('classify_dating', models.BooleanField(default=False)),
                ('classify_drugs', models.BooleanField(default=True)),
                ('classify_ecommerce_shopping', models.BooleanField(default=False)),
                ('classify_education_science_research', models.BooleanField(default=False)),
                ('classify_entertainment_humor_hobby', models.BooleanField(default=False)),
                ('classify_expired_parked', models.BooleanField(default=False)),
                ('classify_fashion_beauty_cosmetics', models.BooleanField(default=False)),
                ('classify_file_storage', models.BooleanField(default=False)),
                ('classify_food_dining_restaurants', models.BooleanField(default=False)),
                ('classify_forums_message_boards', models.BooleanField(default=False)),
                ('classify_gambling', models.BooleanField(default=True)),
                ('classify_games', models.BooleanField(default=False)),
                ('classify_generic_non_categorized', models.BooleanField(default=False)),
                ('classify_government', models.BooleanField(default=False)),
                ('classify_hate_discrimination_violence', models.BooleanField(default=False)),
                ('classify_health_medicine_fitness', models.BooleanField(default=False)),
                ('classify_jobs_employment_career', models.BooleanField(default=False)),
                ('classify_messaging_chat', models.BooleanField(default=False)),
                ('classify_movies', models.BooleanField(default=False)),
                ('classify_music_radio', models.BooleanField(default=False)),
                ('classify_network_infrastructure', models.BooleanField(default=False)),
                ('classify_news_media', models.BooleanField(default=False)),
                ('classify_nudity_pornography', models.BooleanField(default=True)),
                ('classify_p2p_file_sharing', models.BooleanField(default=False)),
                ('classify_photo_sharing', models.BooleanField(default=False)),
                ('classify_politics', models.BooleanField(default=False)),
                ('classify_portals', models.BooleanField(default=False)),
                ('classify_proxy_anonymizer', models.BooleanField(default=False)),
                ('classify_real_estate_home_interior', models.BooleanField(default=False)),
                ('classify_religious', models.BooleanField(default=False)),
                ('classify_search_engines', models.BooleanField(default=False)),
                ('classify_social_networking', models.BooleanField(default=False)),
                ('classify_software_technology_hardware', models.BooleanField(default=False)),
                ('classify_sports', models.BooleanField(default=False)),
                ('classify_television', models.BooleanField(default=False)),
                ('classify_travel', models.BooleanField(default=False)),
                ('classify_user_tracking', models.BooleanField(default=False)),
                ('classify_video_sharing', models.BooleanField(default=False)),
                ('classify_weapons', models.BooleanField(default=False)),
                ('classify_webmail', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='RuleFileSize',
            fields=[
                ('policy', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='safety.Policy')),
                ('enable', models.BooleanField(default=False)),
                ('max_size', models.IntegerField(default=1048576)),
            ],
        ),
        migrations.AddField(
            model_name='schedule',
            name='policy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='safety.Policy'),
        ),
        migrations.AddField(
            model_name='ruleuseragent',
            name='policy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='safety.Policy'),
        ),
        migrations.AddField(
            model_name='ruleurl',
            name='policy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='safety.Policy'),
        ),
        migrations.AddField(
            model_name='rulefilename',
            name='policy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='safety.Policy'),
        ),
        migrations.AddField(
            model_name='rulefilecontent',
            name='policy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='safety.Policy'),
        ),
        migrations.AddField(
            model_name='ruledomain',
            name='policy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='safety.Policy'),
        ),
        migrations.AddField(
            model_name='rulecontenttype',
            name='policy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='safety.Policy'),
        ),
        migrations.AddField(
            model_name='rulecharset',
            name='policy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='safety.Policy'),
        ),
        migrations.AddField(
            model_name='rulecategorycustom',
            name='policy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='safety.Policy'),
        ),
        migrations.AddField(
            model_name='membersubnet',
            name='policy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='safety.Policy'),
        ),
        migrations.AddField(
            model_name='memberrange',
            name='policy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='safety.Policy'),
        ),
        migrations.AddField(
            model_name='membername',
            name='policy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='safety.Policy'),
        ),
        migrations.AddField(
            model_name='memberldap',
            name='policy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='safety.Policy'),
        ),
        migrations.AddField(
            model_name='memberip',
            name='policy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='safety.Policy'),
        ),
        migrations.AddField(
            model_name='exclusionurl',
            name='policy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='safety.Policy'),
        ),
        migrations.AddField(
            model_name='exclusionsubnet',
            name='policy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='safety.Policy'),
        ),
        migrations.AddField(
            model_name='exclusionrange',
            name='policy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='safety.Policy'),
        ),
        migrations.AddField(
            model_name='exclusionip',
            name='policy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='safety.Policy'),
        ),
        migrations.AddField(
            model_name='exclusiondomain',
            name='policy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='safety.Policy'),
        ),
        migrations.AddField(
            model_name='exclusioncontenttype',
            name='policy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='safety.Policy'),
        ),
        migrations.AlterUniqueTogether(
            name='ruleuseragent',
            unique_together=set([('policy', 'value')]),
        ),
        migrations.AlterUniqueTogether(
            name='ruleurl',
            unique_together=set([('policy', 'value')]),
        ),
        migrations.AlterUniqueTogether(
            name='rulefilename',
            unique_together=set([('policy', 'value')]),
        ),
        migrations.AlterUniqueTogether(
            name='rulefilecontent',
            unique_together=set([('policy', 'value')]),
        ),
        migrations.AlterUniqueTogether(
            name='ruledomain',
            unique_together=set([('policy', 'value')]),
        ),
        migrations.AlterUniqueTogether(
            name='rulecontenttype',
            unique_together=set([('policy', 'value')]),
        ),
        migrations.AlterUniqueTogether(
            name='rulecharset',
            unique_together=set([('policy', 'value')]),
        ),
        migrations.AlterUniqueTogether(
            name='rulecategorycustom',
            unique_together=set([('policy', 'category')]),
        ),
        migrations.AlterUniqueTogether(
            name='membersubnet',
            unique_together=set([('policy', 'value')]),
        ),
        migrations.AlterUniqueTogether(
            name='memberrange',
            unique_together=set([('policy', 'value')]),
        ),
        migrations.AlterUniqueTogether(
            name='membername',
            unique_together=set([('policy', 'value')]),
        ),
        migrations.AlterUniqueTogether(
            name='memberldap',
            unique_together=set([('policy', 'dn')]),
        ),
        migrations.AlterUniqueTogether(
            name='memberip',
            unique_together=set([('policy', 'value')]),
        ),
        migrations.AlterUniqueTogether(
            name='exclusionurl',
            unique_together=set([('policy', 'value')]),
        ),
        migrations.AlterUniqueTogether(
            name='exclusionsubnet',
            unique_together=set([('policy', 'value')]),
        ),
        migrations.AlterUniqueTogether(
            name='exclusionrange',
            unique_together=set([('policy', 'value')]),
        ),
        migrations.AlterUniqueTogether(
            name='exclusionip',
            unique_together=set([('policy', 'value')]),
        ),
        migrations.AlterUniqueTogether(
            name='exclusiondomain',
            unique_together=set([('policy', 'value')]),
        ),
        migrations.AlterUniqueTogether(
            name='exclusioncontenttype',
            unique_together=set([('policy', 'value')]),
        ),
    ]
