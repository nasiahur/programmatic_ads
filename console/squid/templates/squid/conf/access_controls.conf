# -----------------------------------------------------------------------------
# ACCESS CONTROLS
# -----------------------------------------------------------------------------

#  TAG: external_acl_type
#   This option defines external acl classes using a helper program
#   to look up the status
#
#     external_acl_type name [options] FORMAT.. /path/to/helper [helper arguments..]
#
#   Options:
#
#     ttl=n     TTL in seconds for cached results (defaults to 3600
#           for 1 hour)
#
#     negative_ttl=n
#           TTL for cached negative lookups (default same
#           as ttl)
#
#     grace=n   Percentage remaining of TTL where a refresh of a
#           cached entry should be initiated without needing to
#           wait for a new reply. (default is for no grace period)
#
#     cache=n   The maximum number of entries in the result cache. The
#           default limit is 262144 entries.  Each cache entry usually
#           consumes at least 256 bytes. Squid currently does not remove
#           expired cache entries until the limit is reached, so a proxy
#           will sooner or later reach the limit. The expanded FORMAT
#           value is used as the cache key, so if the details in FORMAT
#           are highly variable, a larger cache may be needed to produce
#           reduction in helper load.
#
#     children-max=n
#           Maximum number of acl helper processes spawned to service
#           external acl lookups of this type. (default 20)
#
#     children-startup=n
#           Minimum number of acl helper processes to spawn during
#           startup and reconfigure to service external acl lookups
#           of this type. (default 0)
#
#     children-idle=n
#           Number of acl helper processes to keep ahead of traffic
#           loads. Squid will spawn this many at once whenever load
#           rises above the capabilities of existing processes.
#           Up to the value of children-max. (default 1)
#
#     concurrency=n concurrency level per process. Only used with helpers
#           capable of processing more than one query at a time.
#
#     protocol=2.5  Compatibility mode for Squid-2.5 external acl helpers.
#
#     ipv4 / ipv6   IP protocol used to communicate with this helper.
#           The default is to auto-detect IPv6 and use it when available.
#
#
#   FORMAT specifications
#
#     %LOGIN    Authenticated user login name
#     %un       A user name. Expands to the first available name
#           from the following list of information sources:
#           - authenticated user name, like %ul or %LOGIN
#           - user name sent by an external ACL, like %EXT_USER
#           - SSL client name, like %us in logformat
#           - ident user name, like %ui in logformat
#     %EXT_USER Username from previous external acl
#     %EXT_LOG  Log details from previous external acl
#     %EXT_TAG  Tag from previous external acl
#     %IDENT    Ident user name
#     %SRC      Client IP
#     %SRCPORT  Client source port
#     %URI      Requested URI
#     %DST      Requested host
#     %PROTO    Requested URL scheme
#     %PORT     Requested port
#     %PATH     Requested URL path
#     %METHOD   Request method
#     %MYADDR   Squid interface address
#     %MYPORT   Squid http_port number
#     %PATH     Requested URL-path (including query-string if any)
#     %USER_CERT    SSL User certificate in PEM format
#     %USER_CERTCHAIN SSL User certificate chain in PEM format
#     %USER_CERT_xx SSL User certificate subject attribute xx
#     %USER_CA_CERT_xx SSL User certificate issuer attribute xx
#     %ssl::>sni    SSL client SNI sent to Squid
#     %ssl::<cert_subject SSL server certificate DN
#     %ssl::<cert_issuer SSL server certificate issuer DN
#
#     %>{Header}    HTTP request header "Header"
#     %>{Hdr:member}
#           HTTP request header "Hdr" list member "member"
#     %>{Hdr:;member}
#           HTTP request header list member using ; as
#           list separator. ; can be any non-alphanumeric
#           character.
#
#     %<{Header}    HTTP reply header "Header"
#     %<{Hdr:member}
#           HTTP reply header "Hdr" list member "member"
#     %<{Hdr:;member}
#           HTTP reply header list member using ; as
#           list separator. ; can be any non-alphanumeric
#           character.
#
#     %ACL      The name of the ACL being tested.
#     %DATA     The ACL arguments. If not used then any arguments
#           is automatically added at the end of the line
#           sent to the helper.
#           NOTE: this will encode the arguments as one token,
#           whereas the default will pass each separately.
#
#     %%        The percent sign. Useful for helpers which need
#           an unchanging input format.
#
#
#   General request syntax:
#
#     [channel-ID] FORMAT-values [acl-values ...]
#
#
#   FORMAT-values consists of transaction details expanded with
#   whitespace separation per the config file FORMAT specification
#   using the FORMAT macros listed above.
#
#   acl-values consists of any string specified in the referencing
#   config 'acl ... external' line. see the "acl external" directive.
#
#   Request values sent to the helper are URL escaped to protect
#   each value in requests against whitespaces.
#
#   If using protocol=2.5 then the request sent to the helper is not
#   URL escaped to protect against whitespace.
#
#   NOTE: protocol=3.0 is deprecated as no longer necessary.
#
#   When using the concurrency= option the protocol is changed by
#   introducing a query channel tag in front of the request/response.
#   The query channel tag is a number between 0 and concurrency-1.
#   This value must be echoed back unchanged to Squid as the first part
#   of the response relating to its request.
#
#
#   The helper receives lines expanded per the above format specification
#   and for each input line returns 1 line starting with OK/ERR/BH result
#   code and optionally followed by additional keywords with more details.
#
#
#   General result syntax:
#
#     [channel-ID] result keyword=value ...
#
#   Result consists of one of the codes:
#
#     OK
#       the ACL test produced a match.
#
#     ERR
#       the ACL test does not produce a match.
#
#     BH
#       An internal error occurred in the helper, preventing
#       a result being identified.
#
#   The meaning of 'a match' is determined by your squid.conf
#   access control configuration. See the Squid wiki for details.
#
#   Defined keywords:
#
#     user=     The users name (login)
#
#     password= The users password (for login= cache_peer option)
#
#     message=  Message describing the reason for this response.
#           Available as %o in error pages.
#           Useful on (ERR and BH results).
#
#     tag=      Apply a tag to a request. Only sets a tag once,
#           does not alter existing tags.
#
#     log=      String to be logged in access.log. Available as
#           %ea in logformat specifications.
#
#     clt_conn_tag= Associates a TAG with the client TCP connection.
#           Please see url_rewrite_program related documentation
#           for this kv-pair.
#
#   Any keywords may be sent on any response whether OK, ERR or BH.
#
#   All response keyword values need to be a single token with URL
#   escaping, or enclosed in double quotes (") and escaped using \ on
#   any double quotes or \ characters within the value. The wrapping
#   double quotes are removed before the value is interpreted by Squid.
#   \r and \n are also replace by CR and LF.
#
#   Some example key values:
#
#       user=John%20Smith
#       user="John Smith"
#       user="J. \"Bob\" Smith"
#Default:
# none

{% if authpseudoad.enable %}
external_acl_type inspector_auth ttl={{authpseudoad.positive_ttl}} negative_ttl={{authpseudoad.negative_ttl}} children-max={{authpseudoad.helper_total}} children-startup={{authpseudoad.helper_startup}} children-idle={{authpseudoad.helper_idle}} %SRC /opt/websafety/bin/inspector_auth.py --server1={{authpseudoad.server1}} --port1={{authpseudoad.port1}}{% if authpseudoad.server2 %} --server2={{authpseudoad.server2}} --port2={{authpseudoad.port2}}{% endif %}{% if authpseudoad.verbose %} --verbose{% endif %}{% if authpseudoad.token %} --token={{authpseudoad.token}}{% endif %}
{% endif %}

#  TAG: acl
#   Defining an Access List
#
#   Every access list definition must begin with an aclname and acltype, 
#   followed by either type-specific arguments or a quoted filename that
#   they are read from.
#
#      acl aclname acltype argument ...
#      acl aclname acltype "file" ...
#
#   When using "file", the file should contain one item per line.
#
#   Some acl types supports options which changes their default behaviour.
#   The available options are:
#
#   -i,+i   By default, regular expressions are CASE-SENSITIVE. To make them
#       case-insensitive, use the -i option. To return case-sensitive
#       use the +i option between patterns, or make a new ACL line
#       without -i. 
#
#   -n  Disable lookups and address type conversions.  If lookup or
#       conversion is required because the parameter type (IP or
#       domain name) does not match the message address type (domain
#       name or IP), then the ACL would immediately declare a mismatch
#       without any warnings or lookups.
#
#   --  Used to stop processing all options, in the case the first acl
#       value has '-' character as first character (for example the '-'
#       is a valid domain name)
#
#   Some acl types require suspending the current request in order
#   to access some external data source.
#   Those which do are marked with the tag [slow], those which
#   don't are marked as [fast].
#   See http://wiki.squid-cache.org/SquidFaq/SquidAcl
#   for further information
#
#   ***** ACL TYPES AVAILABLE *****
#
#   acl aclname src ip-address/mask ... # clients IP address [fast]
#   acl aclname src addr1-addr2/mask ...    # range of addresses [fast]
#   acl aclname dst [-n] ip-address/mask ...    # URL host's IP address [slow]
#   acl aclname localip ip-address/mask ... # IP address the client connected to [fast]
#
#   acl aclname arp      mac-address ... (xx:xx:xx:xx:xx:xx notation)
#     # [fast]
#     # The 'arp' ACL code is not portable to all operating systems.
#     # It works on Linux, Solaris, Windows, FreeBSD, and some other
#     # BSD variants.
#     #
#     # NOTE: Squid can only determine the MAC/EUI address for IPv4
#     # clients that are on the same subnet. If the client is on a
#     # different subnet, then Squid cannot find out its address.
#     #
#     # NOTE 2: IPv6 protocol does not contain ARP. MAC/EUI is either
#     # encoded directly in the IPv6 address or not available.
#
#   acl aclname srcdomain   .foo.com ...
#     # reverse lookup, from client IP [slow]
#   acl aclname dstdomain [-n] .foo.com ...
#     # Destination server from URL [fast]
#   acl aclname srcdom_regex [-i] \.foo\.com ...
#     # regex matching client name [slow]
#   acl aclname dstdom_regex [-n] [-i] \.foo\.com ...
#     # regex matching server [fast]
#     #
#     # For dstdomain and dstdom_regex a reverse lookup is tried if a IP
#     # based URL is used and no match is found. The name "none" is used
#     # if the reverse lookup fails.
#
#   acl aclname src_as number ...
#   acl aclname dst_as number ...
#     # [fast]
#     # Except for access control, AS numbers can be used for
#     # routing of requests to specific caches. Here's an
#     # example for routing all requests for AS#1241 and only
#     # those to mycache.mydomain.net:
#     # acl asexample dst_as 1241
#     # cache_peer_access mycache.mydomain.net allow asexample
#     # cache_peer_access mycache_mydomain.net deny all
#
#   acl aclname peername myPeer ...
#     # [fast]
#     # match against a named cache_peer entry
#     # set unique name= on cache_peer lines for reliable use.
#
#   acl aclname time [day-abbrevs] [h1:m1-h2:m2]
#     # [fast]
#     #  day-abbrevs:
#     # S - Sunday
#     # M - Monday
#     # T - Tuesday
#     # W - Wednesday
#     # H - Thursday
#     # F - Friday
#     # A - Saturday
#     #  h1:m1 must be less than h2:m2
#
#   acl aclname url_regex [-i] ^http:// ...
#     # regex matching on whole URL [fast]
#   acl aclname urllogin [-i] [^a-zA-Z0-9] ...
#     # regex matching on URL login field
#   acl aclname urlpath_regex [-i] \.gif$ ...
#     # regex matching on URL path [fast]
#
#   acl aclname port 80 70 21 0-1024...   # destination TCP port [fast]
#                                         # ranges are alloed
#   acl aclname localport 3128 ...        # TCP port the client connected to [fast]
#                                         # NP: for interception mode this is usually '80'
#
#   acl aclname myportname 3128 ...       # *_port name [fast]
#
#   acl aclname proto HTTP FTP ...        # request protocol [fast]
# 
#   acl aclname method GET POST ...       # HTTP request method [fast]
#
#   acl aclname http_status 200 301 500- 400-403 ... 
#     # status code in reply [fast]
#
#   acl aclname browser [-i] regexp ...
#     # pattern match on User-Agent header (see also req_header below) [fast]
#
#   acl aclname referer_regex [-i] regexp ...
#     # pattern match on Referer header [fast]
#     # Referer is highly unreliable, so use with care
#
#   acl aclname ident username ...
#   acl aclname ident_regex [-i] pattern ...
#     # string match on ident output [slow]
#     # use REQUIRED to accept any non-null ident.
#
#   acl aclname proxy_auth [-i] username ...
#   acl aclname proxy_auth_regex [-i] pattern ...
#     # perform http authentication challenge to the client and match against
#     # supplied credentials [slow]
#     #
#     # takes a list of allowed usernames.
#     # use REQUIRED to accept any valid username.
#     #
#     # Will use proxy authentication in forward-proxy scenarios, and plain
#     # http authenticaiton in reverse-proxy scenarios
#     #
#     # NOTE: when a Proxy-Authentication header is sent but it is not
#     # needed during ACL checking the username is NOT logged
#     # in access.log.
#     #
#     # NOTE: proxy_auth requires a EXTERNAL authentication program
#     # to check username/password combinations (see
#     # auth_param directive).
#     #
#     # NOTE: proxy_auth can't be used in a transparent/intercepting proxy
#     # as the browser needs to be configured for using a proxy in order
#     # to respond to proxy authentication.
#
#   acl aclname snmp_community string ...
#     # A community string to limit access to your SNMP Agent [fast]
#     # Example:
#     #
#     # acl snmppublic snmp_community public
#
#   acl aclname maxconn number
#     # This will be matched when the client's IP address has
#     # more than <number> TCP connections established. [fast]
#     # NOTE: This only measures direct TCP links so X-Forwarded-For
#     # indirect clients are not counted.
#
#   acl aclname max_user_ip [-s] number
#     # This will be matched when the user attempts to log in from more
#     # than <number> different ip addresses. The authenticate_ip_ttl
#     # parameter controls the timeout on the ip entries. [fast]
#     # If -s is specified the limit is strict, denying browsing
#     # from any further IP addresses until the ttl has expired. Without
#     # -s Squid will just annoy the user by "randomly" denying requests.
#     # (the counter is reset each time the limit is reached and a
#     # request is denied)
#     # NOTE: in acceleration mode or where there is mesh of child proxies,
#     # clients may appear to come from multiple addresses if they are
#     # going through proxy farms, so a limit of 1 may cause user problems.
#
#   acl aclname random probability
#     # Pseudo-randomly match requests. Based on the probability given.
#     # Probability may be written as a decimal (0.333), fraction (1/3)
#     # or ratio of matches:non-matches (3:5).
#
#   acl aclname req_mime_type [-i] mime-type ...
#     # regex match against the mime type of the request generated
#     # by the client. Can be used to detect file upload or some
#     # types HTTP tunneling requests [fast]
#     # NOTE: This does NOT match the reply. You cannot use this
#     # to match the returned file type.
#
#   acl aclname req_header header-name [-i] any\.regex\.here
#     # regex match against any of the known request headers.  May be
#     # thought of as a superset of "browser", "referer" and "mime-type"
#     # ACL [fast]
#
#   acl aclname rep_mime_type [-i] mime-type ...
#     # regex match against the mime type of the reply received by
#     # squid. Can be used to detect file download or some
#     # types HTTP tunneling requests. [fast]
#     # NOTE: This has no effect in http_access rules. It only has
#     # effect in rules that affect the reply data stream such as
#     # http_reply_access.
#
#   acl aclname rep_header header-name [-i] any\.regex\.here
#     # regex match against any of the known reply headers. May be
#     # thought of as a superset of "browser", "referer" and "mime-type"
#     # ACLs [fast]
#
#   acl aclname external class_name [arguments...]
#     # external ACL lookup via a helper class defined by the
#     # external_acl_type directive [slow]
#
#   acl aclname user_cert attribute values...
#     # match against attributes in a user SSL certificate
#     # attribute is one of DN/C/O/CN/L/ST or a numerical OID [fast]
#
#   acl aclname ca_cert attribute values...
#     # match against attributes a users issuing CA SSL certificate
#     # attribute is one of DN/C/O/CN/L/ST or a numerical OID  [fast]
#
#   acl aclname ext_user username ...
#   acl aclname ext_user_regex [-i] pattern ...
#     # string match on username returned by external acl helper [slow]
#     # use REQUIRED to accept any non-null user name.
#
#   acl aclname tag tagvalue ...
#     # string match on tag returned by external acl helper [fast]
#     # DEPRECATED. Only the first tag will match with this ACL.
#     # Use the 'note' ACL instead for handling multiple tag values.
#
#   acl aclname hier_code codename ...
#     # string match against squid hierarchy code(s); [fast]
#     #  e.g., DIRECT, PARENT_HIT, NONE, etc.
#     #
#     # NOTE: This has no effect in http_access rules. It only has
#     # effect in rules that affect the reply data stream such as
#     # http_reply_access.
#
#   acl aclname note name [value ...]
#     # match transaction annotation [fast]
#     # Without values, matches any annotation with a given name.
#     # With value(s), matches any annotation with a given name that
#     # also has one of the given values.
#     # Names and values are compared using a string equality test.
#     # Annotation sources include note and adaptation_meta directives
#     # as well as helper and eCAP responses.
#
#   acl aclname adaptation_service service ...
#     # Matches the name of any icap_service, ecap_service,
#     # adaptation_service_set, or adaptation_service_chain that Squid
#     # has used (or attempted to use) for the master transaction.
#     # This ACL must be defined after the corresponding adaptation
#     # service is named in squid.conf. This ACL is usable with
#     # adaptation_meta because it starts matching immediately after
#     # the service has been selected for adaptation.
#
#   acl aclname any-of acl1 acl2 ...
#     # match any one of the acls [fast or slow]
#     # The first matching ACL stops further ACL evaluation.
#     #
#     # ACLs from multiple any-of lines with the same name are ORed.
#     # For example, A = (a1 or a2) or (a3 or a4) can be written as
#     #   acl A any-of a1 a2
#     #   acl A any-of a3 a4
#     #
#     # This group ACL is fast if all evaluated ACLs in the group are fast
#     # and slow otherwise.
#
#   acl aclname all-of acl1 acl2 ... 
#     # match all of the acls [fast or slow]
#     # The first mismatching ACL stops further ACL evaluation.
#     #
#     # ACLs from multiple all-of lines with the same name are ORed.
#     # For example, B = (b1 and b2) or (b3 and b4) can be written as
#     #   acl B all-of b1 b2
#     #   acl B all-of b3 b4
#     #
#     # This group ACL is fast if all evaluated ACLs in the group are fast
#     # and slow otherwise.
#
#   Examples:
#       acl macaddress arp 09:00:2b:23:45:67
#       acl myexample dst_as 1241
#       acl password proxy_auth REQUIRED
#       acl fileupload req_mime_type -i ^multipart/form-data$
#       acl javascript rep_mime_type -i ^application/x-javascript$
#
#Default:
# ACLs all, manager, localhost, and to_localhost are predefined.
#
#
# Recommended minimum configuration:
#

# Example rule allowing access from your local networks.
# Adapt to list your (internal) IP networks from where browsing
# should be allowed
{% for item in acldefault.get_allowed_src %}acl localnet src {{item}}
{% endfor %}

# explicit admin configured list of local ips/networks that are not allowed to use the proxy
{% for item in acldefault.get_denied_src %}acl denied_localnet src {{item}}
{% endfor %}

# specifies ports to which HTTPS connections can be made (default)
acl SSL_ports port 443 

# and admin configured
{% if acldefault.additional_sslports %}acl SSL_ports port {{acldefault.additional_sslports}}
{% else %}# none additional ssl ports specified
{% endif %}

# specifies ports to which HTTP connections can be made (default)
acl Safe_ports port 80          # http
acl Safe_ports port 21          # ftp
acl Safe_ports port 443         # https
acl Safe_ports port 70          # gopher
acl Safe_ports port 210         # wais
acl Safe_ports port 1025-65535  # unregistered ports
acl Safe_ports port 280         # http-mgmt
acl Safe_ports port 488         # gss-http
acl Safe_ports port 591         # filemaker
acl Safe_ports port 777         # multiling http

# and admin configured
{% if acldefault.additional_safeports %}acl Safe_ports port {{acldefault.additional_safeports}}
{% else %}# none additional safe ports specified
{% endif %}

# predefined acl for CONNECT tunnels
acl CONNECT method CONNECT

# advanced acl written as-is without autoescape
{% autoescape off %}
{% if acldefault.advanced_acl %}{{acldefault.advanced_acl}}
{% else %}# no advanced acls specified
{% endif %}
{% endautoescape %}

#  TAG: proxy_protocol_access
#   Determine which client proxies can be trusted to provide correct
#   information regarding real client IP address using PROXY protocol.
#
#   Requests may pass through a chain of several other proxies
#   before reaching us. The original source details may by sent in:
#       * HTTP message Forwarded header, or
#       * HTTP message X-Forwarded-For header, or
#       * PROXY protocol connection header.
#
#   This directive is solely for validating new PROXY protocol
#   connections received from a port flagged with require-proxy-header.
#   It is checked only once after TCP connection setup.
#
#   A deny match results in TCP connection closure.
#
#   An allow match is required for Squid to permit the corresponding
#   TCP connection, before Squid even looks for HTTP request headers.
#   If there is an allow match, Squid starts using PROXY header information
#   to determine the source address of the connection for all future ACL
#   checks, logging, etc.
#
#   SECURITY CONSIDERATIONS:
#
#       Any host from which we accept client IP details can place
#       incorrect information in the relevant header, and Squid
#       will use the incorrect information as if it were the
#       source address of the request.  This may enable remote
#       hosts to bypass any access control restrictions that are
#       based on the client's source addresses.
#
#   This clause only supports fast acl types.
#   See http://wiki.squid-cache.org/SquidFaq/SquidAcl for details.
#Default:
# all TCP connections to ports with require-proxy-header will be denied
{% if network.enable_proxy_proto %}
acl proxy_protocol_access_hosts src {{network.proxy_hosts}}
proxy_protocol_access allow proxy_protocol_access_hosts
{% endif %}

#  TAG: follow_x_forwarded_for
#   Determine which client proxies can be trusted to provide correct
#   information regarding real client IP address.
#
#   Requests may pass through a chain of several other proxies
#   before reaching us. The original source details may by sent in:
#       * HTTP message Forwarded header, or
#       * HTTP message X-Forwarded-For header, or
#       * PROXY protocol connection header.
#
#   PROXY protocol connections are controlled by the proxy_protocol_access
#   directive which is checked before this.
#
#   If a request reaches us from a source that is allowed by this
#   directive, then we trust the information it provides regarding
#   the IP of the client it received from (if any).
#
#   For the purpose of ACLs used in this directive the src ACL type always
#   matches the address we are testing and srcdomain matches its rDNS.
#
#   On each HTTP request Squid checks for X-Forwarded-For header fields.
#   If found the header values are iterated in reverse order and an allow
#   match is required for Squid to continue on to the next value.
#   The verification ends when a value receives a deny match, cannot be
#   tested, or there are no more values to test.
#   NOTE: Squid does not yet follow the Forwarded HTTP header.
#
#   The end result of this process is an IP address that we will
#   refer to as the indirect client address.  This address may
#   be treated as the client address for access control, ICAP, delay
#   pools and logging, depending on the acl_uses_indirect_client,
#   icap_uses_indirect_client, delay_pool_uses_indirect_client, 
#   log_uses_indirect_client and tproxy_uses_indirect_client options.
#
#   This clause only supports fast acl types.
#   See http://wiki.squid-cache.org/SquidFaq/SquidAcl for details.
#
#   SECURITY CONSIDERATIONS:
#
#       Any host from which we accept client IP details can place
#       incorrect information in the relevant header, and Squid
#       will use the incorrect information as if it were the
#       source address of the request.  This may enable remote
#       hosts to bypass any access control restrictions that are
#       based on the client's source addresses.
#
#   For example:
#
#       acl localhost src 127.0.0.1
#       acl my_other_proxy srcdomain .proxy.example.com
#       follow_x_forwarded_for allow localhost
#       follow_x_forwarded_for allow my_other_proxy
#Default:
# X-Forwarded-For header will be ignored.

#  TAG: acl_uses_indirect_client    on|off
#   Controls whether the indirect client address
#   (see follow_x_forwarded_for) is used instead of the
#   direct client address in acl matching.
#
#   NOTE: maxconn ACL considers direct TCP links and indirect
#         clients will always have zero. So no match.
#Default:
# acl_uses_indirect_client on

#  TAG: delay_pool_uses_indirect_client on|off
# Note: This option is only available if Squid is rebuilt with the
#       --enable-follow-x-forwarded-for and --enable-delay-pools
#
#   Controls whether the indirect client address
#   (see follow_x_forwarded_for) is used instead of the
#   direct client address in delay pools.
#Default:
# delay_pool_uses_indirect_client on

#  TAG: log_uses_indirect_client    on|off
#   Controls whether the indirect client address
#   (see follow_x_forwarded_for) is used instead of the
#   direct client address in the access log.
#Default:
# log_uses_indirect_client on

#  TAG: tproxy_uses_indirect_client on|off
#   Controls whether the indirect client address
#   (see follow_x_forwarded_for) is used instead of the
#   direct client address when spoofing the outgoing client.
#
#   This has no effect on requests arriving in non-tproxy
#   mode ports.
#
#   SECURITY WARNING: Usage of this option is dangerous
#   and should not be used trivially. Correct configuration
#   of follow_x_forwarded_for with a limited set of trusted
#   sources is required to prevent abuse of your proxy.
#Default:
# tproxy_uses_indirect_client off

#  TAG: spoof_client_ip
#   Control client IP address spoofing of TPROXY traffic based on
#   defined access lists.
#
#   spoof_client_ip allow|deny [!]aclname ...
#
#   If there are no "spoof_client_ip" lines present, the default
#   is to "allow" spoofing of any suitable request.
#
#   Note that the cache_peer "no-tproxy" option overrides this ACL.
#
#   This clause supports fast acl types.
#   See http://wiki.squid-cache.org/SquidFaq/SquidAcl for details.
#Default:
# Allow spoofing on all TPROXY traffic.

#  TAG: http_access
#   Allowing or Denying access based on defined access lists
#
#   To allow or deny a message received on an HTTP, HTTPS, or FTP port:
#   http_access allow|deny [!]aclname ...
#
#   NOTE on default values:
#
#   If there are no "access" lines present, the default is to deny
#   the request.
#
#   If none of the "access" lines cause a match, the default is the
#   opposite of the last line in the list.  If the last line was
#   deny, the default is allow.  Conversely, if the last line
#   is allow, the default will be deny.  For these reasons, it is a
#   good idea to have an "deny all" entry at the end of your access
#   lists to avoid potential confusion.
#
#   This clause supports both fast and slow acl types.
#   See http://wiki.squid-cache.org/SquidFaq/SquidAcl for details.
#
#Default:
# Deny, unless rules exist in squid.conf.
#

#
# Recommended minimum Access Permission configuration:
#
# Deny requests to certain unsafe ports
http_access deny !Safe_ports

# Deny CONNECT to other than secure SSL ports
http_access deny CONNECT !SSL_ports

# http_access directive corresponding to advanced acl defined above (note it comes before rules for manager below!)
{% autoescape off %}
{% if acldefault.advanced_access %}{{acldefault.advanced_access}}
{% else %}# none specified{%endif%}
{% endautoescape %}

# Only allow cachemgr access from localhost
http_access allow localhost manager
http_access deny manager

# We strongly recommend the following be uncommented to protect innocent
# web applications running on the proxy server who think the only
# one who can access services on "localhost" is a local user
#http_access deny to_localhost

# deny access to admin configured list of local ips/networks (see denied_localnet acl above)
{% if acldefault.denied_src %}http_access deny denied_localnet
{% else %}# none configured
{% endif %}

{% if authlocaldb.enable or authradius.enable or authad.krb5_enable or authad.ntlm_enable or authad.ldap_enable %}

    # if proxy auth is enabled, require all users to authenticate
    include "/opt/websafety/etc/squid/authentication/exclude.conf"
    http_access deny !auth
    http_access allow auth

{% else %}

	{% if authpseudoad.enable %}
		# admin has enabled pseudo active directory authentication, this means or inspector will provide ip -> user name mapping
		acl inspector_auth_acl external inspector_auth
		http_access allow inspector_auth_acl
	{% endif %}

    # no proxy auth configured, allow access from your local networks for everyone
    http_access allow localnet
    http_access allow localhost

{% endif %}

# and finally deny all other access to this proxy
http_access deny all

#  TAG: adapted_http_access
#   Allowing or Denying access based on defined access lists
#
#   Essentially identical to http_access, but runs after redirectors
#   and ICAP/eCAP adaptation. Allowing access control based on their
#   output.
#
#   If not set then only http_access is used.
#Default:
# Allow, unless rules exist in squid.conf.

#  TAG: http_reply_access
#   Allow replies to client requests. This is complementary to http_access.
#
#   http_reply_access allow|deny [!] aclname ...
#
#   NOTE: if there are no access lines present, the default is to allow
#   all replies.
#
#   If none of the access lines cause a match the opposite of the
#   last line will apply. Thus it is good practice to end the rules
#   with an "allow all" or "deny all" entry.
#
#   This clause supports both fast and slow acl types.
#   See http://wiki.squid-cache.org/SquidFaq/SquidAcl for details.
#Default:
# Allow, unless rules exist in squid.conf.

#  TAG: icp_access
#   Allowing or Denying access to the ICP port based on defined
#   access lists
#
#   icp_access  allow|deny [!]aclname ...
#
#   NOTE: The default if no icp_access lines are present is to
#   deny all traffic. This default may cause problems with peers
#   using ICP.
#
#   This clause only supports fast acl types.
#   See http://wiki.squid-cache.org/SquidFaq/SquidAcl for details.
#
## Allow ICP queries from local networks only
##icp_access allow localnet
##icp_access deny all
#Default:
# Deny, unless rules exist in squid.conf.

#  TAG: htcp_access
#   Allowing or Denying access to the HTCP port based on defined
#   access lists
#
#   htcp_access  allow|deny [!]aclname ...
#
#   See also htcp_clr_access for details on access control for
#   cache purge (CLR) HTCP messages.
#
#   NOTE: The default if no htcp_access lines are present is to
#   deny all traffic. This default may cause problems with peers
#   using the htcp option.
#
#   This clause only supports fast acl types.
#   See http://wiki.squid-cache.org/SquidFaq/SquidAcl for details.
#
## Allow HTCP queries from local networks only
##htcp_access allow localnet
##htcp_access deny all
#Default:
# Deny, unless rules exist in squid.conf.

#  TAG: htcp_clr_access
#   Allowing or Denying access to purge content using HTCP based
#   on defined access lists.
#   See htcp_access for details on general HTCP access control.
#
#   htcp_clr_access  allow|deny [!]aclname ...
#
#   This clause only supports fast acl types.
#   See http://wiki.squid-cache.org/SquidFaq/SquidAcl for details.
#
## Allow HTCP CLR requests from trusted peers
#acl htcp_clr_peer src 192.0.2.2 2001:DB8::2
#htcp_clr_access allow htcp_clr_peer
#htcp_clr_access deny all
#Default:
# Deny, unless rules exist in squid.conf.

#  TAG: miss_access
#   Determines whether network access is permitted when satisfying a request.
#
#   For example;
#       to force your neighbors to use you as a sibling instead of
#       a parent.
#
#       acl localclients src 192.0.2.0/24 2001:DB8::a:0/64
#       miss_access deny  !localclients
#       miss_access allow all
#
#   This means only your local clients are allowed to fetch relayed/MISS
#   replies from the network and all other clients can only fetch cached
#   objects (HITs).
#
#   The default for this setting allows all clients who passed the
#   http_access rules to relay via this proxy.
#
#   This clause only supports fast acl types.
#   See http://wiki.squid-cache.org/SquidFaq/SquidAcl for details.
#Default:
# Allow, unless rules exist in squid.conf.

#  TAG: ident_lookup_access
#   A list of ACL elements which, if matched, cause an ident
#   (RFC 931) lookup to be performed for this request.  For
#   example, you might choose to always perform ident lookups
#   for your main multi-user Unix boxes, but not for your Macs
#   and PCs.  By default, ident lookups are not performed for
#   any requests.
#
#   To enable ident lookups for specific client addresses, you
#   can follow this example:
#
#   acl ident_aware_hosts src 198.168.1.0/24
#   ident_lookup_access allow ident_aware_hosts
#   ident_lookup_access deny all
#
#   Only src type ACL checks are fully supported.  A srcdomain
#   ACL might work at times, but it will not always provide
#   the correct result.
#
#   This clause only supports fast acl types.
#   See http://wiki.squid-cache.org/SquidFaq/SquidAcl for details.
#Default:
# Unless rules exist in squid.conf, IDENT is not fetched.

#  TAG: reply_body_max_size size [acl acl...]
#   This option specifies the maximum size of a reply body. It can be
#   used to prevent users from downloading very large files, such as
#   MP3's and movies. When the reply headers are received, the
#   reply_body_max_size lines are processed, and the first line where
#   all (if any) listed ACLs are true is used as the maximum body size
#   for this reply.
#
#   This size is checked twice. First when we get the reply headers,
#   we check the content-length value.  If the content length value exists
#   and is larger than the allowed size, the request is denied and the
#   user receives an error message that says "the request or reply
#   is too large." If there is no content-length, and the reply
#   size exceeds this limit, the client's connection is just closed
#   and they will receive a partial reply.
#
#   WARNING: downstream caches probably can not detect a partial reply
#   if there is no content-length header, so they will cache
#   partial responses and give them out as hits.  You should NOT
#   use this option if you have downstream caches.
#
#   WARNING: A maximum size smaller than the size of squid's error messages
#   will cause an infinite loop and crash squid. Ensure that the smallest
#   non-zero value you use is greater that the maximum header size plus
#   the size of your largest error page.
#
#   If you set this parameter none (the default), there will be
#   no limit imposed.
#
#   Configuration Format is:
#       reply_body_max_size SIZE UNITS [acl ...]
#   ie.
#       reply_body_max_size 10 MB
#
#Default:
# No limit is applied.