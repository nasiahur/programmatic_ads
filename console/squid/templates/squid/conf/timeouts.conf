
# TIMEOUTS
# -----------------------------------------------------------------------------

#  TAG: forward_timeout	time-units
#	This parameter specifies how long Squid should at most attempt in
#	finding a forwarding path for the request before giving up.
#Default:
# forward_timeout 4 minutes

#  TAG: connect_timeout	time-units
#	This parameter specifies how long to wait for the TCP connect to
#	the requested server or peer to complete before Squid should
#	attempt to find another path where to forward the request.
#Default:
# connect_timeout 1 minute

#  TAG: peer_connect_timeout	time-units
#	This parameter specifies how long to wait for a pending TCP
#	connection to a peer cache.  The default is 30 seconds.   You
#	may also set different timeout values for individual neighbors
#	with the 'connect-timeout' option on a 'cache_peer' line.
#Default:
# peer_connect_timeout 30 seconds

#  TAG: read_timeout	time-units
#	Applied on peer server connections.
#
#	After each successful read(), the timeout will be extended by this
#	amount.  If no data is read again after this amount of time,
#	the request is aborted and logged with ERR_READ_TIMEOUT.
#
#	The default is 15 minutes.
#Default:
# read_timeout 15 minutes

#  TAG: write_timeout	time-units
#	This timeout is tracked for all connections that have data
#	available for writing and are waiting for the socket to become
#	ready. After each successful write, the timeout is extended by
#	the configured amount. If Squid has data to write but the
#	connection is not ready for the configured duration, the
#	transaction associated with the connection is terminated. The
#	default is 15 minutes.
#Default:
# write_timeout 15 minutes

#  TAG: request_timeout
#	How long to wait for complete HTTP request headers after initial
#	connection establishment.
#Default:
# request_timeout 5 minutes

#  TAG: client_idle_pconn_timeout
#	How long to wait for the next HTTP request on a persistent
#	client connection after the previous request completes.
#Default:
# client_idle_pconn_timeout 2 minutes

#  TAG: ftp_client_idle_timeout
#	How long to wait for an FTP request on a connection to Squid ftp_port.
#	Many FTP clients do not deal with idle connection closures well,
#	necessitating a longer default timeout than client_idle_pconn_timeout
#	used for incoming HTTP requests.
#Default:
# ftp_client_idle_timeout 30 minutes

#  TAG: client_lifetime	time-units
#	The maximum amount of time a client (browser) is allowed to
#	remain connected to the cache process.  This protects the Cache
#	from having a lot of sockets (and hence file descriptors) tied up
#	in a CLOSE_WAIT state from remote clients that go away without
#	properly shutting down (either because of a network failure or
#	because of a poor client implementation).  The default is one
#	day, 1440 minutes.
#
#	NOTE:  The default value is intended to be much larger than any
#	client would ever need to be connected to your cache.  You
#	should probably change client_lifetime only as a last resort.
#	If you seem to have many client connections tying up
#	filedescriptors, we recommend first tuning the read_timeout,
#	request_timeout, persistent_request_timeout and quick_abort values.
#Default:
# client_lifetime 1 day

#  TAG: half_closed_clients
#	Some clients may shutdown the sending side of their TCP
#	connections, while leaving their receiving sides open.	Sometimes,
#	Squid can not tell the difference between a half-closed and a
#	fully-closed TCP connection.
#
#	By default, Squid will immediately close client connections when
#	read(2) returns "no more data to read."
#
#	Change this option to 'on' and Squid will keep open connections
#	until a read(2) or write(2) on the socket returns an error.
#	This may show some benefits for reverse proxies. But if not
#	it is recommended to leave OFF.
#Default:
# half_closed_clients off

#  TAG: server_idle_pconn_timeout
#	Timeout for idle persistent connections to servers and other
#	proxies.
#Default:
# server_idle_pconn_timeout 1 minute

#  TAG: ident_timeout
#	Maximum time to wait for IDENT lookups to complete.
#
#	If this is too high, and you enabled IDENT lookups from untrusted
#	users, you might be susceptible to denial-of-service by having
#	many ident requests going at once.
#Default:
# ident_timeout 10 seconds

#  TAG: shutdown_lifetime	time-units
#	When SIGTERM or SIGHUP is received, the cache is put into
#	"shutdown pending" mode until all active sockets are closed.
#	This value is the lifetime to set for all open descriptors
#	during shutdown mode.  Any active clients after this many
#	seconds will receive a 'timeout' message.
#Default:
# shutdown_lifetime 30 seconds
shutdown_lifetime 10 seconds