
# OPTIONS FOR URL REWRITING
# -----------------------------------------------------------------------------

#  TAG: url_rewrite_program
#   Specify the location of the executable URL rewriter to use.
#   Since they can perform almost any function there isn't one included.
#
#   For each requested URL, the rewriter will receive on line with the format
#
#     [channel-ID <SP>] URL [<SP> extras]<NL>
#
#   See url_rewrite_extras on how to send "extras" with optional values to
#   the helper.
#   After processing the request the helper must reply using the following format:
#
#     [channel-ID <SP>] result [<SP> kv-pairs]
#
#   The result code can be:
#
#     OK status=30N url="..."
#       Redirect the URL to the one supplied in 'url='.
#       'status=' is optional and contains the status code to send
#       the client in Squids HTTP response. It must be one of the
#       HTTP redirect status codes: 301, 302, 303, 307, 308.
#       When no status is given Squid will use 302.
#
#     OK rewrite-url="..."
#       Rewrite the URL to the one supplied in 'rewrite-url='.
#       The new URL is fetched directly by Squid and returned to
#       the client as the response to its request.
#
#     OK
#       When neither of url= and rewrite-url= are sent Squid does
#       not change the URL.
#
#     ERR
#       Do not change the URL.
#
#     BH
#       An internal error occurred in the helper, preventing
#       a result being identified. The 'message=' key name is
#       reserved for delivering a log message.
#
#
#   In addition to the above kv-pairs Squid also understands the following
#   optional kv-pairs received from URL rewriters:
#     clt_conn_tag=TAG
#       Associates a TAG with the client TCP connection.
#       The TAG is treated as a regular annotation but persists across
#       future requests on the client connection rather than just the
#       current request. A helper may update the TAG during subsequent
#       requests be returning a new kv-pair.
#
#   When using the concurrency= option the protocol is changed by
#   introducing a query channel tag in front of the request/response.
#   The query channel tag is a number between 0 and concurrency-1.
#   This value must be echoed back unchanged to Squid as the first part
#   of the response relating to its request.
#
#   WARNING: URL re-writing ability should be avoided whenever possible.
#        Use the URL redirect form of response instead.
#
#   Re-write creates a difference in the state held by the client
#   and server. Possibly causing confusion when the server response
#   contains snippets of its view state. Embeded URLs, response
#   and content Location headers, etc. are not re-written by this
#   interface.
#
#   By default, a URL rewriter is not used.
#Default:
# none

{% if safe_browsing.enable %}

# google safe browsing protection (all parameters as args)
url_rewrite_program /opt/websafety/bin/safe_browsing_guard.py --conf=/opt/websafety/etc/antivirus/safe_browsing.json{% if safe_browsing.helper_verbose %} --verbose{% endif %}

url_rewrite_children {{safe_browsing.helper_total}} startup={{safe_browsing.helper_startup}} idle={{safe_browsing.helper_idle}} concurrency=0
url_rewrite_extras "%>a/%>A %un %>rm myip=%la myport=%lp bump_mode=%ssl::bump_mode sni=\"%ssl::>sni\" referer=\"%{Referer}>h\""

{% endif %}

#  TAG: url_rewrite_children
#   The maximum number of redirector processes to spawn. If you limit
#   it too few Squid will have to wait for them to process a backlog of
#   URLs, slowing it down. If you allow too many they will use RAM
#   and other system resources noticably.
#   
#   The startup= and idle= options allow some measure of skew in your
#   tuning.
#   
#       startup=
#   
#   Sets a minimum of how many processes are to be spawned when Squid
#   starts or reconfigures. When set to zero the first request will
#   cause spawning of the first child process to handle it.
#   
#   Starting too few will cause an initial slowdown in traffic as Squid
#   attempts to simultaneously spawn enough processes to cope.
#   
#       idle=
#   
#   Sets a minimum of how many processes Squid is to try and keep available
#   at all times. When traffic begins to rise above what the existing
#   processes can handle this many more will be spawned up to the maximum
#   configured. A minimum setting of 1 is required.
#
#       concurrency=
#
#   The number of requests each redirector helper can handle in
#   parallel. Defaults to 0 which indicates the redirector
#   is a old-style single threaded redirector.
#
#   When this directive is set to a value >= 1 then the protocol
#   used to communicate with the helper is modified to include
#   an ID in front of the request/response. The ID from the request
#   must be echoed back with the response to that request.
#Default:
# url_rewrite_children 20 startup=0 idle=1 concurrency=0

#  TAG: url_rewrite_host_header
#   To preserve same-origin security policies in browsers and
#   prevent Host: header forgery by redirectors Squid rewrites
#   any Host: header in redirected requests.
#   
#   If you are running an accelerator this may not be a wanted
#   effect of a redirector. This directive enables you disable
#   Host: alteration in reverse-proxy traffic.
#   
#   WARNING: Entries are cached on the result of the URL rewriting
#   process, so be careful if you have domain-virtual hosts.
#   
#   WARNING: Squid and other software verifies the URL and Host
#   are matching, so be careful not to relay through other proxies
#   or inspecting firewalls with this disabled.
#Default:
# url_rewrite_host_header on

#  TAG: url_rewrite_access
#   If defined, this access list specifies which requests are
#   sent to the redirector processes.
#
#   This clause supports both fast and slow acl types.
#   See http://wiki.squid-cache.org/SquidFaq/SquidAcl for details.
#Default:
# Allow, unless rules exist in squid.conf.

{% if safe_browsing.enable %}

    #
    # urlrewrite exclusions - by destination name or IP
    #
    acl url_rewrite_exclude_domainname dstdomain "/opt/websafety/etc/squid/urlrewrite/exclude/domain_name.conf"
    acl url_rewrite_exclude_domainaddr dst       "/opt/websafety/etc/squid/urlrewrite/exclude/domain_ip.conf"    
    acl url_rewrite_exclude_domainaddr dst       "/opt/websafety/etc/squid/urlrewrite/exclude/domain_subnet.conf"    
    acl url_rewrite_exclude_domainaddr dst       "/opt/websafety/etc/squid/urlrewrite/exclude/domain_range.conf"    

    #
    # urlrewrite exclusions - by source IP
    #
    acl url_rewrite_exclude_useraddr src "/opt/websafety/etc/squid/urlrewrite/exclude/user_ip.conf"    
    acl url_rewrite_exclude_useraddr src "/opt/websafety/etc/squid/urlrewrite/exclude/user_subnet.conf"    
    acl url_rewrite_exclude_useraddr src "/opt/websafety/etc/squid/urlrewrite/exclude/user_range.conf"    

    #
    # urlrewrite exclusions - other types
    #
    acl url_rewrite_exclude_useragent   browser -i    "/opt/websafety/etc/squid/urlrewrite/exclude/user_agent.conf"    
    acl url_rewrite_exclude_schedule    time          "/opt/websafety/etc/squid/urlrewrite/exclude/schedule.conf"    

    # ok deny all requests above
    url_rewrite_access deny url_rewrite_exclude_domainname
    url_rewrite_access deny url_rewrite_exclude_domainaddr
    url_rewrite_access deny url_rewrite_exclude_useraddr
    url_rewrite_access deny url_rewrite_exclude_useragent
    url_rewrite_access deny url_rewrite_exclude_schedule

    # simply add the advanced config
    include "/opt/websafety/etc/squid/urlrewrite/exclude/advanced.conf"  

{% endif %}

#  TAG: url_rewrite_bypass
#   When this is 'on', a request will not go through the
#   redirector if all the helpers are busy.  If this is 'off'
#   and the redirector queue grows too large, Squid will exit
#   with a FATAL error and ask you to increase the number of
#   redirectors.  You should only enable this if the redirectors
#   are not critical to your caching system.  If you use
#   redirectors for access control, and you enable this option,
#   users may have access to pages they should not
#   be allowed to request.
#Default:
# url_rewrite_bypass off

#  TAG: url_rewrite_extras
#   Specifies a string to be append to request line format for the
#   rewriter helper. "Quoted" format values may contain spaces and
#   logformat %macros. In theory, any logformat %macro can be used.
#   In practice, a %macro expands as a dash (-) if the helper request is
#   sent before the required macro information is available to Squid.
#Default:
# url_rewrite_extras "%>a/%>A %un %>rm myip=%la myport=%lp"